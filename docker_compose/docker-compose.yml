---
version: '3'
services:
  nginx_reverse_proxy:
    container_name: nginx
    build: ../nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
    depends_on:
      - rocketchat
    #networks:
      #docker_network:
        #aliases:
          #- nginx_reverse_proxy
    volumes:
      - /home/dennis/Docker_Volumes/nginx:/reverse_proxy

  front:
    container_name: front
    #build: ./front
    image: front:release
    restart: unless-stopped
    command: ["./front"]
    ports:
      - 8000:8000
  
  back:
    container_name: back
    build:
      context: ../../../Homepage/Rocket_back/
      dockerfile: $PWD/../back/Dockerfile
    image: back:release
    restart: unless-stopped
    ports:
      - 8001:8001
    env_file:
      - secret_env/homepage_db/back_secret.env
    #command: ["./back"]
    command: ["tail", "-f", "/dev/null"]

  homepage_db:
    container_name: homepage_db
    image: mysql:8.0.30
    ports:
      - "8002:3306"
    env_file:
      - /home/dennis/gits/server/docker_compose/secret_env/homepage_db/db_secret.env
    volumes:
      - /home/dennis/Docker_Volumes/Homepage/db/mysql_docker_volume/:/var/lib/mysql

  rocketchat:
    container_name: rocket_chat
    image: rocketchat/rocket.chat:4.8.2
    restart: unless-stopped
    ports:
      - 3000:3000
    depends_on:
      - mongo
    #networks:
      #docker_network:
        #aliases:
          #- rocketchat
    volumes:
      - /home/dennis/Docker_Volumes/rocket_chat/uploads:/app/uploads
    command: >
      bash -c
        "for (( ; ; )); do
          node main.js &&
          s=$$? && break || s=$$?;
          echo \"Could not start Rocket.Chat. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    environment:
      - PORT=3000
      - ROOT_URL=https://chat.dennismarwood.com
      - MONGO_URL=mongodb://mongo:27017/rocketchat
      - MONGO_OPLOG_URL=mongodb://mongo:27017/local
      - MAIL_URL=smtp://smtp.email
      - HTTP_FORWARDED_COUNT=1
    labels:
      #- "traefik.enable=false"
      - "traefik.backend=rocketchat"
      - "traefik.frontend.rule=Host: chat.dennismarwood.com"

  mongo:
    container_name: mongo
    image: mongo:5.0
    restart: unless-stopped
    #networks:
      #docker_network:
        #aliases:
          #- mongo 
    volumes:
    - /home/dennis/Docker_Volumes/mongo/data/db:/data/db
    - /home/dennis/Docker_Volumes/mongo/data/dump:/dump
    #command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    #command: mongod --oplogSize 128 --replSet rs0 --storageEngine=mmapv1
    command: >
      bash -c
        "while [ ! -f /data/db/WiredTiger ]; do
          echo \"wiredTiger migration hasn't started yet. Waiting 30 secs...\";
          sleep 30;
        done;
        docker-entrypoint.sh mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger;"
    labels:
    - "traefik.enable=false"

  # this container's job is just run the command to initialize the replica set.
  # it will run the command and remove himself (it will not stay running)
  mongo-init-replica:
    container_name: mongo-init-replica
    image: mongo:5.0
    depends_on:
      - mongo
    #networks:
      #docker_network:
        #aliases:
          #- mongo_replica
    command: >
      bash -c
        "for (( ; ; )); do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Could not reach MongoDB. Waiting 5 secs ...\";
          sleep 5;
        done; (exit $$s)"

# a network is how we allow our containers to talk to one another
#networks:
  #This is the name at the container level
  #docker_network:
    #This is the name at the compose file level
    #name: docker_network

# hubot, the popular chatbot (add the bot user first and change the password before starting this image)
#hubot:
#image: rocketchat/hubot-rocketchat:latest
#restart: unless-stopped
#environment:
#- ROCKETCHAT_URL=rocketchat:3000
#- ROCKETCHAT_ROOM=GENERAL
#- ROCKETCHAT_USER=bot
#- ROCKETCHAT_PASSWORD=botpassword
#- BOT_NAME=bot
# you can add more scripts as you'd like here, they need to be installable by npm
#- EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics
#depends_on:
#- rocketchat
#labels:
#- "traefik.enable=false"
#volumes:
#- ./scripts:/home/hubot/scripts
# this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier
#ports:
#- 3001:8080