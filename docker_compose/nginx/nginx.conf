server_names_hash_bucket_size  64;
root /www/data/;
ssl_certificate /etc/letsencrypt/live/dennismarwood.com/fullchain.pem;
ssl_certificate_key /etc/letsencrypt/live/dennismarwood.com/privkey.pem;
ssl on;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # donâ€™t use SSLv3 ref: POODLE
upstream backend {
    server rocketchat:3000;
}
	#Attempt to trash any requests that don't specify the "host" name. https://nginx.org/en/docs/http/request_processing.html
	#Note that this method returns data in the cert that specifies a valid host name, but it is better than nothing.
	#server { 
		#listen 443 ssl default_server;
		#server_name "";
		#return 444;
		#ssl_certificate /etc/letsencrypt/live/dennis-rocket-chat.duckdns.org/fullchain.pem;
		#ssl_certificate_key /etc/letsencrypt/live/dennis-rocket-chat.duckdns.org/privkey.pem;
	#}
	server {
    	listen 80 default_server;
		ssl off;
    	server_name _;
    	return 301 https://$host$request_uri;
	}
	server {
		listen 443 default_server;
		server_name dennismarwood.com www.dennismarwood.com;
		location / {
			index index.html;
		}
	}
	server {
		listen 443;
		server_name blog.dennismarwood.com;
		location / {
			index blog_index.html;
		}
	}
	server {
		listen 443;
		server_name hire.dennismarwood.com;
		location / {
			index hire_index.html;
		}
	}
	server {
		listen 443;
		server_name mail.dennismarwood.com;
		location / {
			index mail_index.html;
		}
	}
	server {
		listen 443;
		server_name portfolio.dennismarwood.com;
		location / {
			index portfolio_index.html;
		}
	}
	server {
		listen 443;
		server_name resume.dennismarwood.com;
		location / {
			index resume_index.html;
		}
	}
	server {
		listen 443;
		server_name chat.dennismarwood.com;
		client_max_body_size 200M;
		error_log /var/log/nginx/rocketchat.access.log;
		#ssl_protocols TLSv1.3;
		
		location / {
			proxy_pass http://chat.dennismarwood.com:3000;
			#proxy_set_header Host $http_host;

			proxy_http_version 1.1;
			proxy_set_header Upgrade $http_upgrade;
			proxy_set_header Connection "Upgrade";
			proxy_set_header Host $host;

			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto https;
			proxy_set_header X-Nginx-Proxy true;

			proxy_redirect off;
		}		
	}